############################################################################################################
# desc: Publish changed packages using lerna
# params: versionSpec, working directory, GIT CONFIG as defined as ENV variables or in a pipeline library
# return: npm packages are published to the registry, version bumped in github
# pre-reqs: Dependencies must be installed, .npmrc configured, changes are merged to master
################s############################################################################################

parameters:
  versionSpec: ''
  run_lerna_version: false
  workingDirectory: ''
  publishCommand: 'run publish'

steps:
  # In order to Lerna to bump the version for the packages, we must ensure the following:
  # 1. We are not in detached HEAD for the current commit SHA on master
  # 2. We ignore the uncommitted .npmrc file changes as they contain credentials that shouldn't be committed
  # We ONLY publish packages master once changes are merged into master.
  - bash: |
      set -x
      echo $(GIT_USER_EMAIL)
      echo $(GIT_USER_NAME)
      git config --global user.email $(GIT_USER_EMAIL)
      git config --global user.name $(GIT_USER_NAME)
      git remote rm origin
      git remote add origin $(GIT_ORIGIN)
      git remote -v
      git fetch
      git checkout master
      SHA=$(Build.SourceVersion)
      git reset --mixed $SHA
      git update-index --assume-unchanged .npmrc
    displayName: Get changes for master at SHA

  # Ensure Node.js 12 is active
  - task: NodeTool@0
    inputs:
      versionSpec:  ${{ parameters.versionSpec }}
      customRegistry: 'useNpmrc'
    displayName: 'Use Node.js ${{ parameters.versionSpec }}'

  # Version the Lerna packages first, this will commit to the repo and update the changelog
  - ${{ if eq(parameters.run_lerna_version, true) }}:
    - task: Npm@1
      displayName: 'Publish: Version packages using lerna'
      inputs:
        command: 'custom' # Options: install, publish, custom
        customCommand: 'run version'
        workingDir: ${{ parameters.workingDirectory }}
        verbose: true
        customRegistry: 'useNpmrc'

  # Publish the newly versioned packages to specified registries
  - task: Npm@1
    displayName: 'Publish: Publish packages using lerna'
    inputs:
      command: 'custom' # Options: install, publish, custom
      customCommand: ${{ parameters.publishCommand }}
      workingDir: ${{ parameters.workingDirectory }}
      verbose: true
      customRegistry: 'useNpmrc'
