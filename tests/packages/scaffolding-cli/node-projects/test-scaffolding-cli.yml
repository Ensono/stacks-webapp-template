##################################################################################################################################
# Desc: 
# 
# Pre-reqs: 
##################################################################################################################################

pr: none

trigger:
  branches:
    include:
      - master

  paths:
    include:
      - 'packages/scaffolding-cli/templates/src/*'

resources:
  repositories:
    - repository: templates
      type: github
      name: amido/stacks-pipeline-templates
      ref: refs/tags/v1.2.1
      endpoint: amidostacks # GitHub Service Connection

# NOTE: If you use both variables and variable groups, you'll have to use name/value syntax for the individual (non-grouped)
variables:
    self_repo: stacks-webapp-template/tests/packages/scaffolding-cli
    self_repo_src: node-projects
    self_generic_name: scaffolding-cli
    # Versioning
    version_major: 0
    version_minor: 0
    version_revision: $[counter(variables['version_minor'], 0)]
    # Docker Config
    docker_image_name: $(self_generic_name)
    docker_image_tag: "$(version_major).$(version_minor).$(version_revision)-$(build.sourcebranchname)"
    docker_container_registry_name: $(company)$(project)nonproduks$(domain)


steps:
  - checkout: self
  - checkout: templates
    persistCredentials: true

  - template: steps/run-scaffolding-cli.yml
    parameters:
      # Docker Config
      build-container-image-generic: true
      build-run-container-image: true
      docker_build_additional_args: "--build-arg PROJECT_WORKDIR=$() --build-arg CONFIG_FILENAME=$() ."
      docker_run_additional_args: "-t scaffolding-cli"
      docker_workdir: "$(Agent.BuildDirectory)/s/$(self_repo)/$(self_repo_src)"
      docker_imagename: "$(docker_image_name)"
      docker_containerregistryname: "$(docker_container_registry_name)"
      docker_tag_args: "-t $(docker_container_registry_name)/$(docker_image_name):$(docker_image_tag) \
      -t $(docker_container_registry_name)/$(docker_image_name):latest"
      # Run scripts against built image
      run_scripts: false
