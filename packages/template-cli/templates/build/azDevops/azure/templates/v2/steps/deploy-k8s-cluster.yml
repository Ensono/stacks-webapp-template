parameters:
  aks_cluster_name: ''
  aks_resource_group_name: ''
  aks_dns_resource_group_name: ''
  ingress_definition: []
      # ARR=(${{ parameters.ingress_definition }})
        # for i in "${${{ parameters.ingress_definition }}[@]}"
      # echo "${ARR[1]}"
      # echo "${ARR[2]}"
  scripts_dir: ''
  external_dns_yml: ''
  base_external_dns_yml: ''

steps:
  # Do Login
  - bash: |
      az -v
      az login --service-principal --username $(azure_client_id) --password $(azure_client_secret) --tenant $(azure_tenant_id)
      az account set -s $(azure_subscription_id)
      az aks get-credentials --overwrite-existing --resource-group ${{ parameters.aks_resource_group_name }} --name ${{ parameters.aks_cluster_name }}
    displayName: 'K8s: Login AKS'
    env:
      AZURE_CLOUD_NAME: AzureCloud
      # ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
      # ARM_CLIENT_ID: $(azure_client_id)
      # ARM_CLIENT_SECRET: $(azure_client_secret)
      # ARM_TENANT_ID: $(azure_tenant_id)

  - ${{ each ingress in parameters.ingress_definition }}:
    - bash: |
        echo $FOO
        kubectl apply -f ${{ ingress }} --context ${{ parameters.aks_cluster_name }}
      displayName: 'K8s: Deploy Ingress-Nginx'
      workingDirectory: ${{ parameters.terraform_working_dir }}
      env:
        FOO: BAR
  
  - bash: |
      echo $(pwd)
      ./yaml-templating.sh ${{ parameters.base_external_dns_yaml }} ${{ parameters.external_dns_yaml }}
    env:
      domain_filter: nonprod.amidostacks.com
      aks_resource_group: amido-stacks-dev-cycle2
    displayName: 'K8s: template external dns'
    workingDirectory: ${{ parameters.scripts_dir }}

  - bash: |
      ./external-dns.sh ${{ parameters.aks_resource_group_name }} ${{ parameters.aks_cluster_name }} ${{ parameters.aks_dns_resource_group_name }} ${{ parameters.external_dns_yaml }}
    displayName: 'K8s: Deploy External DNS service'
    workingDirectory: ${{ parameters.scripts_dir }}
    env: 
      ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
      ARM_CLIENT_ID: $(azure_client_id)
      ARM_CLIENT_SECRET: $(azure_client_secret)
      ARM_TENANT_ID: $(azure_tenant_id)
    
