parameters:
  # Terraform Basic Config
  terraform_working_dir: ''
  terraform_output_artefact: 'tfoutputs'
  # Terraform State Config
  # DEFAULTING to globally available library
  terraform_backend_client_id: $(azure_client_id)
  terraform_backend_client_secret: $(azure_client_secret)
  terraform_backend_tenant_id: $(azure_tenant_id)
  terraform_backend_subscription_id: $(azure_subscription_id)
  terraform_state_rg: ''
  terraform_state_storage: ''
  terraform_state_container: ''
  terraform_state_key: ''
  terraform_state_workspace: ''
  # Global Config
  company: 'amido'
  project: 'stacks'
  environment: ''
  component: ''
  # Azure config
  location: 'uksouth'
  tags: ''
  # Terraform Resource Specific Config
  terraform_extra_properties: {}
  terraform_output_commands: ''
  azure_cli_providers: []

steps:
  - template: ../steps/deploy-terraform-init.yml
    # Terraform Backend & Azure Credential config comes via Variable Group
    # that must be inherited into this step!
    parameters:
      #  Terraform Config
      terraform_working_dir: ${{ parameters.terraform_working_dir }}
      # Terraform State Config (Must already exist!)
      terraform_state_rg: ${{ parameters.terraform_state_rg }}
      terraform_state_storage: ${{ parameters.terraform_state_storage }}
      terraform_state_container: ${{ parameters.terraform_state_container }}
      terraform_state_key: ${{ parameters.terraform_state_key }}
      terraform_state_workspace: ${{ parameters.terraform_state_workspace }}
      terraform_backend_client_id: ${{ parameters.terraform_backend_client_id }}
      terraform_backend_client_secret: ${{ parameters.terraform_backend_client_secret }}
      terraform_backend_tenant_id: ${{ parameters.terraform_backend_tenant_id }}
      terraform_backend_subscription_id: ${{ parameters.terraform_backend_subscription_id }}

  - bash: |
      az login --service-principal --username $(azure_client_id) --password $(azure_client_secret) --tenant $(azure_tenant_id)
      az feature register --name MSIPreview --namespace Microsoft.ContainerService
      az provider register -n Microsoft.ContainerService
      echo $ARM_SUBSCRIPTION_ID
      terraform plan -input=false -out=tfplan
    displayName: 'Terraform: Plan'
    workingDirectory: ${{ parameters.terraform_working_dir }}
    env:
      # AUTH PARAMS
      ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
      ARM_CLIENT_ID: $(azure_client_id)
      ARM_CLIENT_SECRET: $(azure_client_secret)
      ARM_TENANT_ID: $(azure_tenant_id)
      # Extra Parameters
      # Business specific vars passed from pipeline
      ${{ each var in parameters.terraform_extra_properties }}:
        ${{ var.key }}: ${{ var.value }}

  # TODO: figure out how to do this...
  # - task: ManualIntervention@8
  #   inputs:
  #     instructions: 'reject or resume'
  #     onTimeout: 'reject'

  - bash: terraform apply tfplan
    displayName: 'Terraform: Apply'
    workingDirectory: ${{ parameters.terraform_working_dir }}
    env:
      # AUTH PARAMS
      ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
      ARM_CLIENT_ID: $(azure_client_id)
      ARM_CLIENT_SECRET: $(azure_client_secret)
      ARM_TENANT_ID: $(azure_tenant_id)
      # Extra Parameters
      # Business specific vars passed from pipeline
      ${{ each var in parameters.terraform_extra_properties }}:
        ${{ var.key }}: ${{ var.value }}

  - bash: ${{ parameters.terraform_output_commands }}
    displayName: 'Terraform: Write Outputs to Variables'
    workingDirectory: ${{ parameters.terraform_working_dir }}
    name: ${{ parameters.terraform_output_artefact }}
