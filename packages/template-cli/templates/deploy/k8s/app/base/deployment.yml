apiVersion: apps/v1
kind: Deployment
metadata:
  name: stacks-webapp
  labels:
    app.kubernetes.io/name: stacks-webapp
    app.kubernetes.io/component: web
    app.kubernetes.io/part-of: stacks
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: stacks-webapp
      app.kubernetes.io/component: web
      app.kubernetes.io/part-of: stacks
  template:
    metadata:
      labels:
        app.kubernetes.io/name: stacks-webapp
        app.kubernetes.io/component: web
        app.kubernetes.io/part-of: stacks
    spec:
      containers:
        - name: web
          # this we need to pass from the pipeline to the deployment steps
          image: stacks-webapp-app-image:tag
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_ENV
              value: dev
            - name: LOG_LEVEL
              value: debug
            - name: PORT
              value: '3000'
            - name: MENU_API_URL
              value: 'http://dev.amidostacks.com/api/menu'
            - name: APP_BASE_PATH
              value: '/web/stacks'
            - name: APP_BASE_URL
              value: 'http://localhost'

            - name: APPINSIGHTS_INSTRUMENTATIONKEY
              valueFrom:
                secretKeyRef:
                  name: appinsights
                  key: INSTRUMENTATIONKEY

          # Remove limits and let the Pods container get the default (800cpu)
          # resources:
          #   limits:
          #     cpu: 600m
          #     memory: 500Mi
          #   requests:
          #     cpu: 400m
          #     memory: 350Mi

          ports:
            - name: http
              containerPort: 3000

          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 45
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 25

          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 25
