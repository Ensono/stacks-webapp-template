##################################################################################################################################
# Desc: Post Deployment Tests. Example pipeline that can be triggered and run after success deployment of a webapp.
# 
# Pre-reqs: endpoint = GitHub Service Connection, test_results_storage = Azure Storage Container,
# test_results_container = Azure Storage Container, group = Libary variables containing Azure Portal Subscription Credentials
# Documentation: https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints
##################################################################################################################################

pool:
  vmImage: ubuntu-18.04

trigger:
  branches:
    include:
      - master

resources:
  repositories:
    - repository: templates
      type: github
      name: amido/stacks-pipeline-templates
      # ref: refs/tags/v1.2.0
      ref: feat/1597
      endpoint: amidostacks # GitHub Service Connection

  containers:
    - container: lhci
      image: amidostacks/lhci:0.0.2

variables:
  self_repo: stacks-webapp-template/packages/scaffolding-cli/templates
  working_directory: '$(Agent.BuildDirectory)/s/$(self_repo)/test/testcafe'

  # Resource Test Results Blob Storage Container
  test_results_storage: amidostacksuksdev # Azure Storage
  test_results_container: 'testresults' # Azure Storage Container

  # Lighthouse audit
  lighthouse_audit: true
  lighthouse_config_path: '$(Agent.BuildDirectory)/s/$(self_repo)/test/lighthouse-ci'
  lighthouse_config_filename: lighthouserc.json

  # Deployed app urls
  base_url: 'https://app.nonprod.amidostacks.com'
  base_path: '/web/stacks'
  
  # Resource management connection
  group: amido-stacks-infra-credentials-nonprod # Azure Portal Credentials

steps:
  - checkout: self
  - checkout: templates

  # Run tests with TestCafe
  - template: azDevOps/azure/templates/v2/steps/test-functional-testcafe.yml@templates
    parameters:
      env_vars:
        APP_BASE_URL: $(base_url)
        MENU_API_URL: 'http://dev.amidostacks.com/api/menu'
        APP_BASE_PATH: $(base_path)
        NODE_ENV: production
      working_directory: $(working_directory)
      testcafe_browser_list: 'chrome:headless'

  # Upload test results in pipeline, as artifacts, and html report to blob storage
  - template: azDevOps/azure/templates/v2/steps/test-publish-test-reports-blob.yml@templates
    parameters:
      test_tool_name: testcafe
      artifacts:
        screenshots: '$(working_directory)/screenshots'
      working_directory: $(working_directory)
      test_results_storage: $(test_results_storage)
      test_results_container: $(test_results_container)
      test_results_path: $(working_directory)
      test_results_blob_prefix: $(Build.BuildNumber)
  
  # Upload test results in pipeline, as artifacts, and html report to blob storage
  - template: azDevOps/azure/templates/v2/steps/test-publish-blob.yml@templates
    parameters:
      test_tool_name: testcafe
      working_directory: $(working_directory)
      test_results_storage: $(test_results_storage)
      test_results_path: $(working_directory)/testcafe-xunit-test-results.html

  # Run lighthouse audit
  - ${{ if eq(variables.lighthouse_audit, true) }}:
    - template: azDevOps/azure/templates/v2/steps/test-profiling-lighthouse.yml@templates
      parameters:
        working_directory: $(lighthouse_config_path)
        target_container: lhci
        lighthouse_config_filename: $(lighthouse_config_filename)
        lighthouse_commands:
          - 'collect'
          - 'assert'
        lighthouse_urls:
          - $(base_url)$(base_path)

    # Upload test results in pipeline, as artifacts, and html report to blob storage
    - template: azDevOps/azure/templates/v2/steps/test-publish-blob.yml@templates
      parameters:
        test_tool_name: lighthouse
        working_directory: $(lighthouse_config_path)
        test_results_storage: $(test_results_storage)
        test_results_container: $(test_results_container)
        test_results_path: $(Agent.BuildDirectory)/.lighthouseci
        test_results_blob_prefix: $(Build.BuildNumber)
