pool:
  vmImage: ubuntu-18.04

# Triggered on success of the deployment pipleine
# Change the source to point to the required previous pipeline
resources:
  pipelines:
    - pipeline: azure-pipeline-post-deploy-testcafe
      source: amido-stacks-ssr-app-new-k8s
      trigger:
        branches:
          include:
            - master
  repositories:
    - repository: templates
      type: github
      name: amido/stacks-pipeline-templates
      ref: refs/tag/v1.2.0
      endpoint: amidostacks

variables:
  - name: self_repo
    value: stacks-webapp-template/packages/scaffolding-cli/templates
  - name: working_directory
    value: '$(Agent.BuildDirectory)/s/$(self_repo)/test/testcafe'

  # Resource Test Results Blob Storage Container
  - name: test_results_storage
    value: amidostacksnonprodtests
  - name: test_results_container
    value: 'testresults'

  # Resource management connection
  - group: amido-stacks-infra-credentials-nonprod

steps:
  - checkout: self
  - checkout: templates

  # Run tests with TestCafe
  - template: azDevOps/azure/templates/v2/steps/test-functional-testcafe.yml@templates
    parameters:
      env_vars:
        APP_BASE_URL: 'https://app.nonprod.amidostacks.com'
        MENU_API_URL: 'http://dev.amidostacks.com/api/menu'
        APP_BASE_PATH: '/web/stacks'
        NODE_ENV: production
      working_directory: $(working_directory)
      testcafe_browser_list: 'chrome:headless'

  # Upload test results in pipeline, as artifacts, and html report to blob storage
  - template: azDevOps/azure/templates/v2/steps/test-publish-test-reports-blob.yml@templates
    parameters:
      test_tool_name: testcafe
      artifacts:
        screenshots: '$(working_directory)/screenshots'
      working_directory: $(working_directory)
      test_results_storage: $(test_results_storage)
      test_results_container: $(test_results_container)
      test_results_path: $(working_directory)
      test_results_blob_prefix: $(Build.BuildNumber)
