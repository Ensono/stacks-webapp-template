parameters:
  pool:
    vmImage: "ubuntu-latest"
  versionSpec: 12.x
  project_root_dir: ""
  dependsOn: "GetPackage"
  download_devops: true
  # Custom registry (eg. private)
  customRegistry: ""
  # Docker Config
  docker_build: true
  docker_build_additional_args: ""
  docker_workdir: ""
  docker_imagename: ""
  docker_imagetag: ""
  docker_containerregistryname: ""
  # Vulnerability Scanning
  vulnerability_scan: false
  vulnerability_workdir: ""
  #  Static Code Analysis
  static_code_analysis: false
  sonar_container: ""
  # Linting and formatting validation
  lint_formatting: ""
  shared_eslint_config: ""
  # Testing
  unit_test: true
  contract_test: true
  audit_test: false
  contract_check_can_deploy: true
  cypress_e2e_test: true
  cypress_applitools_test: false
  cypress_e2e_env_vars: {}
  # Build File Output
  build_file: false
  build_on_server: false
  build_file_path: ""
  build_file_artefact: ""
  # build output defaults
  git_do_tag_release: false
  git_release_tag: ""

steps:
  # Login to Azure/AKS
  - template: azDevOps/azure/templates/v2/steps/login-services.yml@templates
    parameters:
      azure_tenant_id: "$(azure_tenant_id)"
      azure_subscription_id: "$(azure_subscription_id)"
      azure_client_id: "$(azure_client_id)"
      azure_client_secret: "$(azure_client_secret)"
      login_azure: true

  # Build Docker Image, Scan and Push to Repository
  - ${{ if eq(parameters.docker_build, true) }}:
      - template: azDevOps/azure/templates/v2/steps/build-container-image.yml@templates
        parameters:
          workingDirectory: ${{ parameters.docker_workdir }}
          docker_build_additional_args: ${{ parameters.docker_build_additional_args }}
          docker_imagename: ${{ parameters.docker_imagename }}
          docker_imagetag: ${{ parameters.docker_imagetag }}
          docker_containerregistryname: ${{ parameters.docker_containerregistryname }}

  # Publish Artefacts if required
  - ${{ if eq(parameters.functional_test, true) }}:
      - task: PublishPipelineArtifact@1
        displayName: "Publish: Functional Tests Artifact"
        inputs:
          path: "${{ parameters.functional_test_path }}"
          artifact: "${{ parameters.functional_test_artefact }}"

  - ${{ if eq(parameters.build_file, true) }}:
      - task: PublishPipelineArtifact@1
        displayName: "Publish: Build Artefacts"
        inputs:
          path: "${{ parameters.build_file_path }}"
          artifact: "${{ parameters.build_file_artefact }}"
